x-environment: &default-tz-puid-pgid
 TZ: $TZ
 PUID: $PUID
 PGID: $PGID
# Keys common to some of the core services that we always to automatically restart on failure
x-common-keys-core: &common-keys-core
 networks:
  - npm_proxy
 security_opt:
  - no-new-privileges:true
 restart: always
# Keys common to some of the dependent services/apps
x-common-keys-apps: &common-keys-apps
 networks:
  - npm_proxy
 security_opt:
  - no-new-privileges:true
 restart: unless-stopped
# Keys common to some of the services in media-services.txt
x-common-keys-media: &common-keys-media
 networks:
  - npm_proxy
 security_opt:
  - no-new-privileges:true
 restart: "no"

networks:
 default:
  driver: bridge
 npm_proxy:
  name: npm_proxy
  driver: bridge
  ipam:
   config:
    - subnet: 192.168.10.0/24

services:
 npm:
  <<: *common-keys-core
  container_name: nginx-proxy-manager
  image: 'jc21/nginx-proxy-manager:latest'
  networks:
   npm_proxy:
    ipv4_address: 192.168.10.10 # You can specify a static IP
  ports:
    - '80:80' # Public HTTP Port. Port Forwarding on Router is ON.
    - '443:443' # Public HTTPS Port. Port Forwarding on Router is ON.
    - '81:81' # Admin Web Port. Port Forwarding on Router is OFF. 
  volumes:
    - $DOCKERDIR/appdata/npm/config:/config
    - $DOCKERDIR/appdata/npm/letsencrypt:/etc/letsencrypt
    - $DOCKERDIR/appdata/npm/data:/data
  environment:
    DB_SQLITE_FILE: "/config/database.sqlite"
    DISABLE_IPV6: 'true'
# Portainer - WebUI for Containers
 portainer:
   <<: *common-keys-core # See EXTENSION FIELDS at the top
   container_name: portainer
   image: portainer/portainer-ce:latest
   command: -H unix:///var/run/docker.sock # Use Docker Socket Proxy and comment this line out, for improved security.
   # command: -H tcp://socket-proxy:2375 # Use this instead, if you have Socket Proxy enabled.
   networks:
     npm_proxy:
       ipv4_address: 192.168.10.11
   ports: # Comment out if using Nginx Proxy Manager to access portainer WebUI.
     - "9000:9000"
   volumes:
     - /var/run/docker.sock:/var/run/docker.sock:ro # Use Docker Socket Proxy and comment this line out, for improved security.
     - $DOCKERDIR/appdata/portainer/data:/data # Change to local directory if you want to save/transfer config locally.
   environment:
     <<: *default-tz-puid-pgid
# sabnzgd - Binary newsgrabber (NZB downloader)
 sabnzbd:
   image: lscr.io/linuxserver/sabnzbd:latest
   container_name: sabnzbd
   networks:
     npm_proxy:
       ipv4_address: 192.168.10.52
   environment:
     <<: *default-tz-puid-pgid
   volumes:
     - $DOCKERDIR/appdata/sabnzbd:/config
     - $DATADIR/usenet:/data/usenet
   ports:
     - "8080:8080"
   restart: unless-stopped
# TransmissionBT - Torrent Downloader
# For Proxmox LXC Containers - https://pve.proxmox.com/wiki/OpenVPN_in_LXC
 transmission-vpn:
   image: linuxserver/transmission:latest
   container_name: transmission-vpn
   restart: unless-stopped
   networks:
     npm_proxy:
       ipv4_address: 192.168.10.53
   ports:
     - "9091:9091"
   cap_add:
     - NET_ADMIN
   devices:
     - /dev/net/tun
   volumes:
     - /etc/localtime:/etc/localtime:ro
     - $DOCKERDIR/appdata/transmission-vpn/data:/data
     - $DOCKERDIR/appdata/transmission-vpn/config:/config
     - $DATADIR/torrents/complete:/data/complete
     - $DATADIR/torrents/incomplete:/data/incomplete
   environment:
     <<: *default-tz-puid-pgid
     LOCAL_NETWORK: "$LOCAL_NETWORK"
     UMASK_SET: 2
     TRANSMISSION_RPC_AUTHENTICATION_REQUIRED: "true"
     TRANSMISSION_RPC_HOST_WHITELIST: "127.0.0.1,$TRANSMISSION_SERVER_IP,$MEDIA_SERVER_IP"
     TRANSMISSION_RPC_PASSWORD: $TRANSMISSION_RPC_PASSWORD
     TRANSMISSION_RPC_USERNAME: $TRANSMISSION_RPC_USERNAME
     TRANSMISSION_UMASK: 002
     TRANSMISSION_RATIO_LIMIT: 1.00
     TRANSMISSION_RATIO_LIMIT_ENABLED: "true"
     TRANSMISSION_ALT_SPEED_DOWN: 40000
     TRANSMISSION_ALT_SPEED_ENABLED: "false"
     TRANSMISSION_ALT_SPEED_UP: 250
     TRANSMISSION_SPEED_LIMIT_DOWN: 80000
     TRANSMISSION_SPEED_LIMIT_DOWN_ENABLED: "true"
     TRANSMISSION_SPEED_LIMIT_UP: 500
     TRANSMISSION_SPEED_LIMIT_UP_ENABLED: "true"
     LOG_TO_STDOUT: "true"
# Jackett
 jackett:
   image: lscr.io/linuxserver/jackett:latest
   container_name: jackett
   environment:
     <<: *default-tz-puid-pgid
   volumes:
     - /path/to/data:/config
     - $DATADIR/torrents:/data/incomplete
   ports:
     - 9117:9117
   restart: unless-stopped
############################# PVRS
# Radarr - Movie management
 radarr:
   <<: *common-keys-media # See EXTENSION FIELDS at the top
   image: lscr.io/linuxserver/radarr:latest # latest tag was causing "Error parsing column 45"
   container_name: radarr
   networks:
     npm_proxy:
       ipv4_address: 192.168.10.61
   ports:
     - "7878:7878"
   volumes:
     - $DOCKERDIR/appdata/radarr:/config
     - $DATADIR/media/movies:/data/movies
     - $DATADIR/usenet:/data/usenet/movies
     - $DATADIR/torrents/complete:/data/complete
     - "/etc/localtime:/etc/localtime:ro"
   environment:
     - TZ=$TZ
     - PUID=$PUID
     - PGID=$PGID
     - UMASK_SET=022
# Sonarr - TV Shows management
 sonarr:
   <<: *common-keys-media # See EXTENSION FIELDS at the top
   image: lscr.io/linuxserver/sonarr:latest
   container_name: sonarr
   networks:
     npm_proxy:
       ipv4_address: 192.168.10.62
   ports:
     - "8989:8989"
   volumes:
     - $DOCKERDIR/appdata/sonarr:/config
     - $DATADIR/media/tv:/data/tv
     - $DATADIR/usenet:/data/usenet/tv
     - $DATADIR/torrents/complete:/data/complete
     - "/etc/localtime:/etc/localtime:ro"
   environment:
     - TZ=$TZ
     - PUID=$PUID
     - PGID=$PGID
     - UMASK_SET=022
# Overseerr
 overseerr:
    image: sctx/overseerr:latest
    container_name: overseerr
    networks:
      npm_proxy:
        ipv4_address: 192.168.10.63
    environment:
      - TZ=$TZ
      - LOG_LEVEL=debug
      - PORT=5055
    ports:
      - 5055:5055
    volumes:
      - $DOCKERDIR/appdata/overseerr:/app/config
    restart: unless-stopped
# Plex - Media Server
 plex:
   <<: *common-keys-media # See EXTENSION FIELDS at the top
   image: linuxserver/plex:latest
   networks:
      npm_proxy:
        ipv4_address: 192.168.10.100
   container_name: plex
   ports:
     - "32400:32400/tcp"
     - "3005:3005/tcp"
     - "8324:8324/tcp"
     - "32469:32469/tcp"
     - "1900:1900/udp" # Conflicts with xTeVe and Synology default ports
     - "32410:32410/udp"
     - "32412:32412/udp"
     - "32413:32413/udp"
     - "32414:32414/udp"
     # - "33400:33400" # If you use Plex Web Tools
   #devices:
   #  - /dev/dri:/dev/dri # for harware transcoding
   volumes:
     - $DOCKERDIR/appdata/plex:/config
     - $DATADIR/media/movies:/data/media/movies
     - $DATADIR/media/tv:/data/media/tv
     - $DATADIR/media:/data/media
     - /dev/shm:/transcode
   environment:
     TZ: $TZ
     HOSTNAME: "dockerPlex"
     PLEX_CLAIM_FILE: $PLEX_TOKEN
     PLEX_UID: $PUID
     PLEX_GID: $PGID
     ADVERTISE_IP: http://$MEDIA_SERVER_IP:32400/
 postgresql:
   image: postgres:15
   container_name: postgresql
   restart: always
   environment:
     POSTGRES_DB: nextcloud
     POSTGRES_USER: postgres
     POSTGRES_PASSWORD: 4409085blA!@#
   volumes:
     - db_data:/var/lib/postgresql/data
   networks:
     npm_proxy:
       ipv4_address: 192.168.10.98

 nextcloud:
   image: nextcloud:latest
   container_name: nextcloud-app
   restart: always
   environment:
     POSTGRES_HOST: postgresql
     POSTGRES_DB: nextcloud
     POSTGRES_USER: postgres
     POSTGRES_PASSWORD: 4409085blA!@#
     NEXTCLOUD_ADMIN_USER: admin
     NEXTCLOUD_ADMIN_PASSWORD: 4409085blA!@#
   volumes:
     - /mnt/data/cloud:/var/www/html
   networks:
     npm_proxy:
       ipv4_address: 192.168.10.99 # Static IP for Nextcloud
   ports:
     - "33332:80"
   depends_on:
     - postgresql

############################# YOUTUBE TRANSCRIPTION SERVICES
# YouTube Transcription API
 youtube-transcribe-api:
   <<: *common-keys-apps
   build:
     context: $DOCKERDIR/v-transcribe  # Update this path to where you put the transcribe project
     dockerfile: docker/Dockerfile.api
   container_name: youtube-transcribe-api
   networks:
     npm_proxy:
       ipv4_address: 192.168.10.71
   volumes:
     - youtube-transcripts:/data
     - /tmp:/tmp
   environment:
     <<: *default-tz-puid-pgid
   depends_on:
     - youtube-transcribe-whisper

# Whisper transcription service  
 youtube-transcribe-whisper:
   <<: *common-keys-apps
   image: ghcr.io/mutablelogic/go-whisper:latest
   container_name: youtube-transcribe-whisper
   networks:
     npm_proxy:
       ipv4_address: 192.168.10.72
   volumes:
     - youtube-whisper-models:/data
   environment:
     - WHISPER_MODEL=ggml-small-q5_0.bin
   # Uncomment for GPU support:
   # deploy:
   #   resources:
   #     reservations:
   #       devices:
   #         - driver: nvidia
   #           capabilities: [gpu]

# Frontend (serves static files + proxy)
 youtube-transcribe-web:
   <<: *common-keys-apps
   image: nginx:alpine
   container_name: youtube-transcribe-web
   networks:
     npm_proxy:
       ipv4_address: 192.168.10.73
   volumes:
     - $DOCKERDIR/v-transcribe/frontend:/usr/share/nginx/html:ro  # Update path
     - youtube-transcripts:/usr/share/nginx/html/files:ro
     - $DOCKERDIR/v-transcribe/nginx.conf:/etc/nginx/nginx.conf:ro  # Update path
   depends_on:
     - youtube-transcribe-api

volumes:
  db_data:
  youtube-whisper-models:
  youtube-transcripts: